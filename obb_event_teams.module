<?php
function obb_event_teams_init() {
  drupal_add_js(drupal_get_path('module', 'obb_event_teams') . '/js/inline-place2book.js');
}
/*
 * Alter p2b on our field collections
 */
function obb_event_teams_entity_view($entity, $type, $view_mode, $langcode)
{
   if ($entity->content['#entity_type'] == "field_collection_item" && $entity->content['#bundle'] == "field_event_hold" && $view_mode == "full") {

    if (isset($entity->item_id) && $entity->item_id && field_get_items('field_collection_item', $entity, 'field_place2book_tickets','und')) {
      //modify the existing placeholder field_place2book_tickets
      $entity->content['field_place2book_tickets']['#weight'] = 50;
      $entity->content['field_place2book_tickets'][0]['#markup'] = '<input type="hidden" class="place2book-ticketinfo" value="' . $entity->item_id . ':entity_load"/>';
    }
  }
}
/*
 * Update insert
 */
function obb_event_teams_node_insert($node) {
    if ($node->type == "ding_event") {
        if(!isset($node->place2book))
        {
            $node->place2book = place2book_settings($node->nid); // not always loaded.
        }
        if ($node->place2book['maintain_copy'] == 1) {
            //check if parent has place2book ?!
            perform_p2b_op_on_inline_hold_tider($node);
            
        }
    }
}
/*
 * Update
 */
function obb_event_teams_node_update($node) {
    if ($node->type == "ding_event") {
        $inline_hold_tider = array();
        if(!isset($node->place2book))
        {
            $node->place2book = place2book_settings($node->nid); // not always loaded.
        }
        if ($node->place2book['maintain_copy'] == 1) {
            //check if parent has place2book ?!
            perform_p2b_op_on_inline_hold_tider($node);
        }
        else if(isset($node->place2book) || $node->place2book['maintain_copy'] == 0)
        {
            //we no longer use p2b ..delete
            perform_p2b_op_on_inline_hold_tider($node,true);
        }
    }
}
/*
 * Delete
 */
function obb_event_teams_node_delete($node) {
    if ($node->type == "ding_event") {
        /*
         * We are deleting an events node...delete place2book
         */
         perform_p2b_op_on_inline_hold_tider($node,true);
    }
}
function obb_event_teams_entity_delete($entity, $type)
{
    if($entity->hostEntity()->type == "ding_event" && $entity->field_name == "field_event_hold")
    {
        $delete_target = array($entity);
        $node = $entity->hostEntity();
        if(!isset($node->place2book))
        {
            $node->place2book = place2book_settings($node->nid); // not always loaded.
        }
        perform_p2b_op_on_inline_hold_tider($node,true,$delete_target);
    }
}
function obb_event_teams_ding_place2book_pre_alter(&$node,$op = "insert")
{
    if(isset($node->field_event_hold['und']) && sizeof($node->field_event_hold['und']) != 0)
    {
        //Save the settings , so we can use them for the teams.
        if(!isset($node->capacity))
        {
            $node->capacity = 0;
        }
         _place2book_db_op($op, $node, -1);
        $node->place2book['maintain_copy'] = 0;
        if($op == "update")
        {
            unset($node->place2book); //dont run p2b update for main node.
        }
    }
}
function obb_event_teams_ding_place2book_entity_load($id)
{
    return entity_load_single('field_collection_item',$id);
}
/*
 * Get main node where we are referenced from.
 */
function perform_p2b_op_on_inline_hold_tider($node,$delete = false,$user_targets = null)
{
   $inline_hold_tider = array();
   if($user_targets == null)
   {
    foreach($node->field_event_hold['und'] as $index => $field_collection_item)
    {
        $hold = entity_load_single('field_collection_item',$field_collection_item['value']);
        array_push($inline_hold_tider,$hold);
    }
   }
   else
   {
       $inline_hold_tider = $user_targets;
   }
   foreach($inline_hold_tider as $inline_hold_node)
   {
       //apply place2book
       $copied_data = clone $inline_hold_node;
       $copied_data->nid = $inline_hold_node->item_id;
       $copied_data->capacity = isset($node->capacity) ? $node->capacity : $node->place2book['capacity'];
       $copied_data->type = "field_collection_item";
       $copied_data->title = $node->title . " - " . $inline_hold_node->field_hold_navn['und'][0]['value'];
       
       $copied_data->field_ding_event_lead = $node->field_ding_event_lead;
       $copied_data->field_ding_event_body = $node->field_ding_event_body;
       
       //$copied_data->field_ding_event_date = $node->field_ding_event_date;
       if(!field_get_items('field_collection_item', $inline_hold_node, 'field_ding_sale_date','und'))
       {
        $copied_data->field_ding_sale_date = $node->field_ding_sale_date;
       }
       //exit(1);
       $copied_data->field_ding_event_price = $node->field_ding_event_price;
       $copied_data->field_ding_event_target = $node->field_ding_event_target;
       $copied_data->field_standard_billet_navn = $node->field_standard_billet_navn;
       $copied_data->field_ding_event_list_image = $node->field_ding_event_list_image;
       $copied_data->field_ding_event_title_image = $node->field_ding_event_title_image;
       $copied_data->field_ding_event_category = $node->field_ding_event_category;
       $copied_data->field_ding_event_location = $node->field_ding_event_location;
       $copied_data->field_ding_event_library = $node->field_ding_event_library;
       $copied_data->place2book = $node->place2book;
       $copied_data->publish_on = $node->publish_on;
               
       if(!isset($inline_hold_node->field_place2book_tickets['und']['0']['value']) && $delete != true)
       {
            $place2book_id = place2book_event_op('insert',$copied_data);
            if($place2book_id != null)
            {
                $inline_hold_node->field_place2book_tickets['und']['0']['value']= $place2book_id;
                $inline_hold_node->save(TRUE);
            }
            
       }
       else if($delete != true && isset($inline_hold_node->field_place2book_tickets['und']['0']['value']))
       {
            $place2book_id = place2book_event_op('update',$copied_data,$inline_hold_node->field_place2book_tickets['und']['0']['value']);
            if($place2book_id != null)
            {
                $inline_hold_node->field_place2book_tickets['und']['0']['value']= $place2book_id ;
                $inline_hold_node->save(TRUE);
            }
            
       }
       else if($delete == true && isset($inline_hold_node->field_place2book_tickets['und']['0']['value']))
       {
            $place2book_id = place2book_event_op('delete',$copied_data,$inline_hold_node->field_place2book_tickets['und']['0']['value']);
            $inline_hold_node->field_place2book_tickets = null;
            /*
             * Make sure to clean up the table aswell
             */
            $inline_hold_node->save(TRUE); // clear the ticket id before deleting the row.
            $place2book_id = db_query('SELECT place2book_id
                         FROM {ding_place2book_field_collections}
                         WHERE nid = :nid', array(':nid' => $copied_data->nid))
               ->fetchField();
            _place2book_db_op('delete', $copied_data, $place2book_id);
            
       }
       //drupal_write_record('node', $inline_hold_node, 'nid');
        
   }
}
