<?php
function obb_event_teams_init() {
  drupal_add_js(drupal_get_path('module', 'obb_event_teams') . '/js/inline-place2book.js');
  drupal_add_css(drupal_get_path('module', 'obb_event_teams') . '/css/obb_event_team_p2b.css');
}
/*
 * Alter p2b on our field collections
 */
function obb_event_teams_entity_view($entity, $type, $view_mode, $langcode)
{
   if ($entity->content['#entity_type'] == "field_collection_item" && $entity->content['#bundle'] == "field_event_hold" && $view_mode == "full") {

    if (isset($entity->item_id) && $entity->item_id && field_get_items('field_collection_item', $entity, 'field_place2book_tickets','und')) {
      //modify the existing placeholder field_place2book_tickets
      $entity->content['field_place2book_tickets']['#weight'] = 50;
      $entity->content['field_place2book_tickets'][0]['#markup'] = '<input type="hidden" class="place2book-ticketinfo" value="' . $entity->item_id . ':entity_load"/>';
    }
  }
}
/*
 * Update insert
 */
function obb_event_teams_node_insert($node) {
    if ($node->type == "ding_event") {
        if(!isset($node->place2book))
        {
            $node->place2book = place2book_settings($node->nid); // not always loaded.
        }
        if ($node->place2book['maintain_copy'] == 1) {
            //check if parent has place2book ?!
            perform_p2b_op_on_inline_hold_tider($node);
        }
    }
}
/*
 * Update
 */
function obb_event_teams_node_update($node) {
    if ($node->type == "ding_event") {
        $inline_hold_tider = array();
        if(!isset($node->place2book))
        {
            $node->place2book = place2book_settings($node->nid); // not always loaded.
        }
        if (isset($node->place2book['maintain_copy']) && $node->place2book['maintain_copy'] == 1) {
            //if parent has a premade old ticketid..delete it from place2book.
            // this happens if a users saves the node before addding teams..
            
            perform_p2b_op_on_inline_hold_tider($node);
        }
        else if(isset($node->place2book) || $node->place2book['maintain_copy'] == 0)
        {
            //we no longer use p2b ..delete
            perform_p2b_op_on_inline_hold_tider($node,true);
        }
    }
}
/*
 * Delete
 */
function obb_event_teams_node_delete($node) {
    if ($node->type == "ding_event") {
        /*
         * We are deleting an events node...delete place2book
         */
         perform_p2b_op_on_inline_hold_tider($node,true);
    }
}
function obb_event_teams_entity_delete($entity, $type)
{
    try{
        if(method_exists($entity,"hostEntity") && $entity->hostEntity()->type == "ding_event" && $entity->field_name == "field_event_hold")
        {
            $delete_target = array($entity);
            $node = $entity->hostEntity();
            if(!isset($node->place2book))
            {
                $node->place2book = place2book_settings($node->nid); // not always loaded.
            }
            perform_p2b_op_on_inline_hold_tider($node,true,$delete_target);
        }
    } catch (Exception $ex) {
        
    }
    
}
function obb_event_teams_ding_place2book_pre_alter(&$node,$op = "insert")
{
    if(isset($node->field_event_hold['und']) && sizeof($node->field_event_hold['und']) != 0)
    {
        //Save the settings , so we can use them for the teams.
        if(!isset($node->capacity))
        {
            $node->capacity = 0;
        }
         _place2book_db_op($op, $node, -1);
        $node->place2book['maintain_copy'] = 0;
        if($op == "update")
        {
            unset($node->place2book); //dont run p2b update for main node.
        }
    }
}
function obb_event_teams_ding_place2book_entity_load($id)
{
    return entity_load_single('field_collection_item',$id);
}
/*
 * Get main node where we are referenced from.
 */
function perform_p2b_op_on_inline_hold_tider($node,$delete = false,$user_targets = null)
{
   $inline_hold_tider = array();
   if($user_targets == null)
   {
       if(isset($node->field_event_hold['und']) && sizeof($node->field_event_hold['und']) != 0 )
       {
        $nsettings = place2book_settings($node->nid);
        if(isset($nsettings['place2book_id']) && !empty($nsettings['place2book_id'] && $nsettings['place2book_id'] != "-1"))
        {
            place2book_event_op('delete',$node,$nsettings['place2book_id']);
        }
            foreach($node->field_event_hold['und'] as $index => $field_collection_item)
            {
                $hold = entity_load_single('field_collection_item',$field_collection_item['value']);
                array_push($inline_hold_tider,$hold);
            }
       }
   }
   else
   {
       $inline_hold_tider = $user_targets;
   }
   foreach($inline_hold_tider as $inline_hold_node)
   {
       //apply place2book
       $copied_data = clone $inline_hold_node;
       $copied_data->nid = $inline_hold_node->item_id;
       if(isset($inline_hold_node->field_capacity) && sizeof($inline_hold_node->field_capacity) == 0)
       {
        $copied_data->capacity = isset($node->capacity) ? $node->capacity : $node->place2book['capacity'];
        if($copied_data->capacity == null)
        {
            $copied_data->capacity = 0;
        }
       }
       else
       {
           $copied_data->capacity = $inline_hold_node->field_capacity['und'][0]['value'];
       }
       $copied_data->type = "field_collection_item";
       $copied_data->title = $node->title . " - " . $inline_hold_node->field_hold_navn['und'][0]['value'];
       
       $copied_data->field_ding_event_lead = $node->field_ding_event_lead;
       $copied_data->field_ding_event_body = $node->field_ding_event_body;
       
       //$copied_data->field_ding_event_date = $node->field_ding_event_date;
       if(!field_get_items('field_collection_item', $inline_hold_node, 'field_ding_sale_date','und'))
       {
        $copied_data->field_ding_sale_date = $node->field_ding_sale_date;
       }
       //exit(1);
       $copied_data->field_ding_event_price = $node->field_ding_event_price;
       $copied_data->field_ding_event_target = $node->field_ding_event_target;
       $copied_data->field_standard_billet_navn = $node->field_standard_billet_navn;
       $copied_data->field_ding_event_list_image = $node->field_ding_event_list_image;
       $copied_data->field_ding_event_title_image = $node->field_ding_event_title_image;
       $copied_data->field_ding_event_category = $node->field_ding_event_category;
       $copied_data->field_ding_event_location = $node->field_ding_event_location;
       $copied_data->field_ding_event_library = $node->field_ding_event_library;
       $copied_data->place2book = $node->place2book;
       $copied_data->publish_on = $node->publish_on;
               
       if(!isset($inline_hold_node->field_place2book_tickets['und']['0']['value']) && $delete != true)
       {
            $place2book_id = place2book_event_op('insert',$copied_data);
            if($place2book_id != null)
            {
                $inline_hold_node->field_place2book_tickets['und']['0']['value']= $place2book_id;
                $inline_hold_node->save(TRUE);
            }
            
       }
       else if($delete != true && isset($inline_hold_node->field_place2book_tickets['und']['0']['value']))
       {
            $place2book_id = place2book_event_op('update',$copied_data,$inline_hold_node->field_place2book_tickets['und']['0']['value']);
            if($place2book_id != null)
            {
                $inline_hold_node->field_place2book_tickets['und']['0']['value']= $place2book_id ;
                $inline_hold_node->save(TRUE);
            }
            
       }
       else if($delete == true && isset($inline_hold_node->field_place2book_tickets['und']['0']['value']))
       {
            $place2book_id = place2book_event_op('delete',$copied_data,$inline_hold_node->field_place2book_tickets['und']['0']['value']);
            $inline_hold_node->field_place2book_tickets = null;
            /*
             * Make sure to clean up the table aswell
             */
            $inline_hold_node->save(TRUE); // clear the ticket id before deleting the row.
            $place2book_id = db_query('SELECT place2book_id
                         FROM {ding_place2book_field_collections}
                         WHERE nid = :nid', array(':nid' => $copied_data->nid))
               ->fetchField();
            _place2book_db_op('delete', $copied_data, $place2book_id);
       }        
   }
}
function obb_event_teams_views_post_execute(&$view) {
    if($view->name == "ding_event" && ($view->current_display == "ding_event_floated_list" || $view->current_display == "panel_pane_1"))
    {
        foreach($view->result as $index => $result)
        {
            $node = node_load($result->nid); //can get heavy i guess..
            if(isset($node->field_event_hold) && sizeof($node->field_event_hold) != 0)
            {
                foreach($node->field_event_hold['und'] as $team)
                {
                    //find first team that is not over.
                    $hold = entity_load_single('field_collection_item',$team['value']);
                    $date = date("d-m-Y"); //get current date.
                    $team_date = !isset($hold->field_ding_event_date['und'][0]['value2']) ? $hold->field_ding_event_date['und'][0]['value'] : $hold->field_ding_event_date['und'][0]['value2'];
                    $team_end_date = date('d-m-Y', strtotime($team_date));
                   
                    $time1 = strtotime($date);
                    $time2 = strtotime($team_end_date);
                    
                    if($time2 >= $time1)
                    {
                        //set the main node to the new team dates.
                        if($view->current_display == "panel_pane_1")
                        {
                            $view->result[$index]->field_field_ding_event_date_1[0]['raw']['value'] = $hold->field_ding_event_date['und'][0]['value'];
                            if(isset($view->result[$index]->field_field_ding_event_date_1['und'][0]['value2']) && isset($hold->field_ding_event_date['und'][0]['value2']))
                            {
                                $view->result[$index]->field_field_ding_event_date_1[0]['raw']['value2'] = $hold->field_ding_event_date['und'][0]['value2'];
                            }
                            else
                            {
                                unset($view->result[$index]->field_field_ding_event_date_1[0]['raw']['value2']);
                            }
                            $view->result[$index]->field_field_ding_event_date_1[0]['rendered']['#markup'] = "<div>Flere tidspunkter</div>";
                        }
                        else
                        {
                            $view->result[$index]->field_field_ding_event_date[0]['raw']['value'] = $hold->field_ding_event_date['und'][0]['value'];
                            if(isset($view->result[$index]->field_field_ding_event_date['und'][0]['value2']) && isset($hold->field_ding_event_date['und'][0]['value2']))
                            {
                                $view->result[$index]->field_field_ding_event_date[0]['raw']['value2'] = $hold->field_ding_event_date['und'][0]['value2'];
                            }
                            else
                            {
                                unset($view->result[$index]->field_field_ding_event_date[0]['raw']['value2']);
                            }
                            $view->result[$index]->field_field_ding_event_date[0]['rendered']['#markup'] = "<div>Flere tidspunkter</div>";
                        }
                        
                         break;
                    }
                    
                }
            }
        }
        uasort($view->result,'sort_team_view_results');
    }
    if($view->name == "event_stat" && $view->current_display == "views_data_export_1")
    {
         foreach($view->result as $index => $result)
        {
            $node = node_load($result->nid); //can get heavy i guess..
            if(isset($node->field_event_hold) && sizeof($node->field_event_hold) != 0)
            {
                foreach($node->field_event_hold['und'] as $team)
                {
                    //Add team to result
                    $new_result = clone $result;
                    $hold = entity_load_single('field_collection_item',$team['value']);
                    $new_result->node_title .= " - " . $hold->field_hold_navn['und'][0]['value'];
                    $new_result->nid .= ":" . $hold->item_id;
                    foreach ($new_result as $key => $value) {
                        
                        if(strpos($key,'field_field_') !== false)
                        {
                            $hold_key = explode('field_field_',$key);
                            //its a field..update the value
                            if(isset($hold->{'field_'.$hold_key[1]}))
                            {
                                //unset($new_result->{"field_field_".$hold_key[1]});
                                $field = field_get_items('field_collection_item', $hold, 'field_'.$hold_key[1],'und');
                                $output = field_view_value('field_collection_item', $hold, 'field_'.$hold_key[1], $field,'full','und');

                                $new_result->{"field_field_".$hold_key[1]}[0]['raw'] = $hold->{'field_'.$hold_key[1]};
                                $new_result->{"field_field_".$hold_key[1]}[0]['rendered']['#markup'] = $field['0']['value'];
                                
                            }
                        }
                    }
                    $view->result[] = $new_result;
                    //remove old node
                }
                unset($view->result[$index]);
            }
        }
        //sort it to match view results.
        uasort($view->result,'sort_team_view_results');
    }
}
function sort_team_view_results($a, $b)
{
    $date = null;
    $date1 = null;
    if(property_exists($a,'field_field_ding_event_date') && property_exists($b,'field_field_ding_event_date'))
    {
        $date = date('Y-m-d H:i:s', strtotime($a->field_field_ding_event_date[0]['raw']['value']));
        $date1 = date('Y-m-d H:i:s', strtotime($b->field_field_ding_event_date[0]['raw']['value']));
    }
    else
    {
        $date = date('Y-m-d H:i:s', strtotime($a->field_field_ding_event_date_1[0]['raw']['value']));
        $date1 = date('Y-m-d H:i:s', strtotime($b->field_field_ding_event_date_1[0]['raw']['value']));
    }
   
    if ($date == $date1) {
        return 0;
    }
    return ($date < $date1) ? -1 : 1;
}
function obb_event_teams_preprocess_node(&$variables) {
    $node = $variables['node'];
    $view_mode = $variables['view_mode'];
    if( $node->type == "ding_event" && $view_mode == 'full' ){
        //check if we have teams.
        
        //set date period to "multiple periods"
        if(isset($node->field_event_hold) && sizeof($node->field_event_hold) != 0)
        {
            $node->content["field_ding_event_date"][0] = array('#markup' => "Flere tidspunkter");
        }else {
            $variables['content']['field_event_hold']['#access'] = FALSE;
        }
        
    }
}
function obb_event_teams_clone_node_alter(&$node,$context)
{
    if($node->type == "ding_event")
    {
        //fixup a setting.
        unset($node->field_event_hold['und']);
    }
}